{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validator => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const regEx = /^[a-zA-Z]+$/;\n  let valueIsValid = regEx.test(validator(enteredValue));\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n    let val = event.target.value;\n\n    if (event.target.value === '' || regEx.test(event.target.value)) {\n      return true;\n    } else {\n      valueIsValid = false;\n      event.target.value = val.substring(0, val.length - 1);\n      return false;\n    }\n  };\n\n  const inputBlurHandler = event => {\n    console.log(enteredValue, valueIsValid);\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/abegail.firme/devpractice/ReactJS/workbook-reactjs/src/hooks/useInput.js"],"names":["useState","useInput","validator","enteredValue","setEnteredValue","isTouched","setIsTouched","regEx","valueIsValid","test","hasError","valueChangeHandler","event","target","value","val","substring","length","inputBlurHandler","console","log","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,SAAD,IAAe;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMO,KAAK,GAAG,aAAd;AACA,MAAIC,YAAY,GAAGD,KAAK,CAACE,IAAN,CAAWP,SAAS,CAACC,YAAD,CAApB,CAAnB;AACA,QAAMO,QAAQ,GAAG,CAACF,YAAD,IAAiBH,SAAlC;;AAEA,QAAMM,kBAAkB,GAAGC,KAAK,IAAI;AAChCR,IAAAA,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACA,QAAIC,GAAG,GAAGH,KAAK,CAACC,MAAN,CAAaC,KAAvB;;AACA,QAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAAvB,IAA6BP,KAAK,CAACE,IAAN,CAAWG,KAAK,CAACC,MAAN,CAAaC,KAAxB,CAAjC,EACA;AACI,aAAO,IAAP;AACH,KAHD,MAIK;AACDN,MAAAA,YAAY,GAAG,KAAf;AACAI,MAAAA,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAqBC,GAAG,CAACC,SAAJ,CAAc,CAAd,EAAkBD,GAAG,CAACE,MAAJ,GAAa,CAA/B,CAArB;AACA,aAAO,KAAP;AACH;AACJ,GAZD;;AAcA,QAAMC,gBAAgB,GAAGN,KAAK,IAAI;AAE9BO,IAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ,EAA0BK,YAA1B;AACAF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAJD;;AAMA,QAAMe,KAAK,GAAG,MAAM;AAChBjB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHQ,IAAAA,KAAK,EAAEX,YADJ;AAEHmB,IAAAA,OAAO,EAAEd,YAFN;AAGHE,IAAAA,QAHG;AAIHC,IAAAA,kBAJG;AAKHO,IAAAA,gBALG;AAMHG,IAAAA;AANG,GAAP;AAQH,CAxCD;;GAAMpB,Q;;AA0CN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = (validator) => {\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n    const regEx = /^[a-zA-Z]+$/\r\n    let valueIsValid = regEx.test(validator(enteredValue));\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(event.target.value);\r\n        let val = event.target.value;\r\n        if (event.target.value === '' || regEx.test(event.target.value)) \r\n        {\r\n            return true;\r\n        }\r\n        else {\r\n            valueIsValid = false\r\n            event.target.value = val.substring(0, (val.length - 1))\r\n            return false\r\n        }\r\n    };\r\n\r\n    const inputBlurHandler = event => {\r\n        \r\n        console.log(enteredValue, valueIsValid)\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    };\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n};\r\n\r\nexport default useInput;"]},"metadata":{},"sourceType":"module"}