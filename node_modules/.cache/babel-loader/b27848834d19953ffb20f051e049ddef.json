{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst useNumber = input => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const numberRegEx = /[0-9]/;\n  const valueIsValid = input(numberRegEx.test(enteredValue));\n  const hasError = !valueIsValid && isTouched;\n  const result = numberRegEx.test(enteredValue);\n\n  const valueChangeHandler = event => {\n    setEnteredValue(valueIsValid);\n  };\n\n  const inputBlurHandler = event => {\n    console.log(result);\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useNumber, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default useNumber;","map":{"version":3,"sources":["C:/Users/abegail.firme/devpractice/ReactJS/01-starting-project/src/hooks/useNumber.js"],"names":["React","useState","useNumber","input","enteredValue","setEnteredValue","isTouched","setIsTouched","numberRegEx","valueIsValid","test","hasError","result","valueChangeHandler","event","inputBlurHandler","console","log","reset","value","isValid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,WAAW,GAAG,OAApB;AAEA,QAAMC,YAAY,GAAGN,KAAK,CAACK,WAAW,CAACE,IAAZ,CAAiBN,YAAjB,CAAD,CAA1B;AACA,QAAMO,QAAQ,GAAG,CAACF,YAAD,IAAiBH,SAAlC;AACA,QAAMM,MAAM,GAAGJ,WAAW,CAACE,IAAZ,CAAiBN,YAAjB,CAAf;;AAEA,QAAMS,kBAAkB,GAAGC,KAAK,IAAI;AAChCT,IAAAA,eAAe,CAACI,YAAD,CAAf;AACH,GAFD;;AAIA,QAAMM,gBAAgB,GAAGD,KAAK,IAAI;AAC9BE,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAKA,QAAMW,KAAK,GAAG,MAAM;AAChBb,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHY,IAAAA,KAAK,EAAEf,YADJ;AAEHgB,IAAAA,OAAO,EAAEX,YAFN;AAGHE,IAAAA,QAHG;AAIHE,IAAAA,kBAJG;AAKHE,IAAAA,gBALG;AAMHG,IAAAA;AANG,GAAP;AAQH,CAhCD;;GAAMhB,S;;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useNumber = (input) => {\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const numberRegEx = /[0-9]/;\r\n\r\n    const valueIsValid = input(numberRegEx.test(enteredValue))\r\n    const hasError = !valueIsValid && isTouched;\r\n    const result = numberRegEx.test(enteredValue)\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(valueIsValid);\r\n    };\r\n\r\n    const inputBlurHandler = event => {\r\n        console.log(result)\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    };\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n};\r\n\r\nexport default useNumber;"]},"metadata":{},"sourceType":"module"}