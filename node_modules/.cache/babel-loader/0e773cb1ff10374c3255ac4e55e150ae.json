{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abegail.firme\\\\devpractice\\\\ReactJS\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"u0pD83/Q1AnD/7py+NXjC//sx/E=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/abegail.firme/devpractice/ReactJS/01-starting-project/src/components/SimpleInput.js"],"names":["useEffect","useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","formIsValid","enteredNameIsValid","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","formSubmissionHandler","preventDefault","console","log","nameInputClasses","nameInputIsInvalid"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AACJC,IAAAA,KAAK,EAAEC,WADH;AAEJC,IAAAA,QAAQ,EAAEC,iBAFN;AAGJC,IAAAA,kBAAkB,EAAEC,iBAHhB;AAIJC,IAAAA,gBAAgB,EAAEC;AAJd,MAKFV,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACQ,IAAN,OAAiB,EAA3B,CALZ;AAOA,MAAIC,WAAW,GAAG,KAAlB;;AAEA,MAAIC,kBAAJ,EAAwB;AACtBD,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAME,sBAAsB,GAAGC,KAAK,IAAI;AACtCC,IAAAA,cAAc,CAACD,KAAK,CAACE,MAAN,CAAad,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMe,oBAAoB,GAAGH,KAAK,IAAI;AACpCI,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGL,KAAK,IAAI;AACrCA,IAAAA,KAAK,CAACM,cAAN;AAEAF,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAI,CAACN,kBAAL,EAAyB;AACvB;AACD;;AAEDS,IAAAA,OAAO,CAACC,GAAR,CAAYnB,WAAZ;AAEAY,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAG,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAbD;;AAeA,QAAMK,gBAAgB,GAAGC,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEL,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,KAAK,EAAEpB,WAApC;AAAiD,QAAA,QAAQ,EAAEU,sBAA3D;AAAmF,QAAA,MAAM,EAAEI;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGO,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACb,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnDD;;GAAMX,W;UAMAD,Q;;;KANAC,W;AAqDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName)\n\n    setEnteredName('');\n    setEnteredNameTouched(false)\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' value={enteredName} onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}