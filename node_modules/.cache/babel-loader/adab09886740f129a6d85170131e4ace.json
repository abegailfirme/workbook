{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst useNumber = () => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const numberRegEx = /^-?[0-9]*$/;\n  const valueIsValid = numberRegEx.test(String(value).toLowerCase());\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = event => {\n    console.log(\"check\", numberRegEx.test(String(value).toLowerCase()));\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useNumber, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default useNumber;","map":{"version":3,"sources":["C:/Users/abegail.firme/devpractice/ReactJS/01-starting-project/src/hooks/useNumber.js"],"names":["React","useState","useNumber","enteredValue","setEnteredValue","isTouched","setIsTouched","numberRegEx","valueIsValid","test","String","value","toLowerCase","hasError","valueChangeHandler","event","target","inputBlurHandler","console","log","reset","isValid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMM,WAAW,GAAG,YAApB;AAGA,QAAMC,YAAY,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,MAAM,CAACC,KAAD,CAAN,CAAcC,WAAd,EAAjB,CAArB;AACA,QAAMC,QAAQ,GAAG,CAACL,YAAD,IAAiBH,SAAlC;;AAEA,QAAMS,kBAAkB,GAAGC,KAAK,IAAI;AAChCX,IAAAA,eAAe,CAACW,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMM,gBAAgB,GAAGF,KAAK,IAAI;AAC9BG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAsBZ,WAAW,CAACE,IAAZ,CAAiBC,MAAM,CAACC,KAAD,CAAN,CAAcC,WAAd,EAAjB,CAAtB;AACAN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAKA,QAAMc,KAAK,GAAG,MAAM;AAChBhB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHK,IAAAA,KAAK,EAAER,YADJ;AAEHkB,IAAAA,OAAO,EAAEb,YAFN;AAGHK,IAAAA,QAHG;AAIHC,IAAAA,kBAJG;AAKHG,IAAAA,gBALG;AAMHG,IAAAA;AANG,GAAP;AAQH,CAhCD;;GAAMlB,S;;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useNumber = () => {\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const numberRegEx = /^-?[0-9]*$/;\r\n    \r\n\r\n    const valueIsValid = numberRegEx.test(String(value).toLowerCase());\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(event.target.value);\r\n    };\r\n\r\n    const inputBlurHandler = event => {\r\n        console.log(\"check\",  numberRegEx.test(String(value).toLowerCase()))\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    };\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n};\r\n\r\nexport default useNumber;"]},"metadata":{},"sourceType":"module"}