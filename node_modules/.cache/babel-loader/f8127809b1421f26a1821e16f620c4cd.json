{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abegail.firme\\\\devpractice\\\\ReactJS\\\\01-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport SimpleInput from './components/SimpleInput';\nimport WorkBook from './components/WorkBook';\nimport { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [entries, setData] = useState([]);\n  const [error, setError] = useState(null); // https://react-workbook-default-rtdb.firebaseio.com/entries.json\n\n  const fetchEmployeeHandler = useCallback(async () => {\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-workbook-default-rtdb.firebaseio.com/entries.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const fetchedEntries = [];\n\n      for (const key in data) {\n        fetchedEntries.push({\n          id: key,\n          eid: data[key].eid,\n          firstname: data[key].firstname,\n          lastname: data[key].lastname,\n          email: data[key].email,\n          birthdate: data[key].birthdate\n        });\n      }\n\n      const transformedData = data.map(employeeData => {\n        return {\n          id: employeeData.id,\n          fname: employeeData.name,\n          lname: employeeData.lname,\n          email: employeeData.email,\n          birthdate: employeeData.birthdate\n        };\n      });\n      setData(transformedData);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    fetchEmployeeHandler();\n  }, [fetchEmployeeHandler]);\n\n  async function addEntryHandler(entry) {\n    const response = await fetch('https://react-workbook-default-rtdb.firebaseio.com/entries.json', {\n      method: 'POST',\n      body: JSON.stringify(entry),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(SimpleInput, {\n      onAddEntry: addEntryHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchEmployeeHandler,\n        children: \"Fetch Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(WorkBook, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ud1e+OFyZOQfUSzipAQV38jYxqQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/abegail.firme/devpractice/ReactJS/01-starting-project/src/App.js"],"names":["SimpleInput","WorkBook","useState","useEffect","useCallback","App","entries","setData","error","setError","fetchEmployeeHandler","response","fetch","ok","Error","data","json","fetchedEntries","key","push","id","eid","firstname","lastname","email","birthdate","transformedData","map","employeeData","fname","name","lname","message","addEntryHandler","entry","method","body","JSON","stringify","headers","console","log"],"mappings":"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","sourcesContent":["import SimpleInput from './components/SimpleInput';\nimport WorkBook from './components/WorkBook';\nimport { useState, useEffect, useCallback } from 'react';\n\nfunction App() {\n  const [entries, setData] = useState([]);\n  const [error, setError] = useState(null);\n  // https://react-workbook-default-rtdb.firebaseio.com/entries.json\n\n  const fetchEmployeeHandler = useCallback(async () => {\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-workbook-default-rtdb.firebaseio.com/entries.json')\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n      const fetchedEntries = [];\n\n      for (const key in data) {\n        fetchedEntries.push({\n          id: key,\n          eid: data[key].eid,\n          firstname: data[key].firstname,\n          lastname: data[key].lastname,\n          email: data[key].email,\n          birthdate: data[key].birthdate\n        });\n      }\n\n      const transformedData = data.map((employeeData) => {\n        return {\n          id: employeeData.id,\n          fname: employeeData.name,\n          lname: employeeData.lname,\n          email: employeeData.email,\n          birthdate: employeeData.birthdate\n        };\n      });\n      setData(transformedData);\n    } catch (error) {\n      setError(error.message)\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchEmployeeHandler();\n  }, [fetchEmployeeHandler]);\n\n  async function addEntryHandler(entry) {\n    const response = await fetch('https://react-workbook-default-rtdb.firebaseio.com/entries.json', {\n      method: 'POST',\n      body: JSON.stringify(entry),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data)\n  }\n\n  return (\n    <div className=\"app\">\n      <SimpleInput onAddEntry={addEntryHandler} />\n\n      <section>\n        <button onClick={fetchEmployeeHandler}>Fetch Entries</button>\n      </section>\n      <section>\n        <WorkBook entries={entries} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}