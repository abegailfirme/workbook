{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst numberInput = value => {\n  _s();\n\n  const numberRegEx = /\\-?\\d*\\.?\\d{1,2}/;\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = numberRegEx.test(String(value).toLowerCase());\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(numberInput, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default numberInput;","map":{"version":3,"sources":["C:/Users/abegail.firme/devpractice/ReactJS/01-starting-project/src/hooks/numberInput.js"],"names":["useState","numberInput","value","numberRegEx","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","test","String","toLowerCase","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,WAAW,GAAG,kBAApB;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMQ,YAAY,GAAGL,WAAW,CAACM,IAAZ,CAAiBC,MAAM,CAACR,KAAD,CAAN,CAAcS,WAAd,EAAjB,CAArB;AACA,QAAMC,QAAQ,GAAG,CAACJ,YAAD,IAAiBF,SAAlC;;AAEA,QAAMO,kBAAkB,GAAGC,KAAK,IAAI;AAChCT,IAAAA,eAAe,CAACS,KAAK,CAACC,MAAN,CAAab,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMc,gBAAgB,GAAGF,KAAK,IAAI;AAC9BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMU,KAAK,GAAG,MAAM;AAChBZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHL,IAAAA,KAAK,EAAEE,YADJ;AAEHc,IAAAA,OAAO,EAAEV,YAFN;AAGHI,IAAAA,QAHG;AAIHC,IAAAA,kBAJG;AAKHG,IAAAA,gBALG;AAMHC,IAAAA;AANG,GAAP;AAQH,CA9BD;;GAAMhB,W;;AAgCN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst numberInput = (value) => {\r\n    const numberRegEx = /\\-?\\d*\\.?\\d{1,2}/;\r\n    \r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueIsValid = numberRegEx.test(String(value).toLowerCase());\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(event.target.value);\r\n    };\r\n\r\n    const inputBlurHandler = event => {\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const reset = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    };\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n};\r\n\r\nexport default numberInput;"]},"metadata":{},"sourceType":"module"}